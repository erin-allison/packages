name: Publish

on:
  push:
  schedule:
    - cron: '0 6,18 * * *'

jobs:
  upload-key:
    runs-on: ubuntu-latest
    steps:
      - name: Import signing key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
      - name: Upload signing key
        run: |
          gpg --keyserver hkp://keyserver.ubuntu.com --send-key BAACABF6809ECEF9

  build-and-publish:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up build user
        run: |
          echo "build ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/build
          useradd build -m -d /home/build

      - name: Install dependencies
        run: |
          cat << EOF >> /etc/pacman.conf

          [multilib]
          Include = /etc/pacman.d/mirrorlist
          EOF

          pacman -Syu --needed --noconfirm --noprogressbar git

          sudo -u build bash << EOF
          cd /home/build
          git clone https://aur.archlinux.org/paru-bin.git
          cd paru-bin
          makepkg -si --noconfirm --noprogressbar

          paru -Syu --noconfirm --noprogressbar aurutils
          EOF

      - name: Set up build environment
        run: |
          mkdir /home/build/repo/ /home/build/source
          repo-add /home/build/repo/ea-private.db.tar.gz
          cp -r ./* /home/build/source/
          chown -R build: /home/build
          echo 'MAKEFLAGS="-j2"' >> /etc/makepkg.conf
          cat << EOF >> /etc/pacman.conf

          [ea-private]
          SigLevel = Optional TrustAll
          Server = file:///home/build/repo
          EOF

      - name: Load GPG public keys
        run: |
          sudo -u build gpg --recv-keys 6AD860EED4598027 # Tony Hutter (GPG key for signing ZFS releases) <hutter2@llnl.gov>
          sudo -u build gpg --recv-keys 0AB9E991C6AF658B # Brian Behlendorf <behlendorf1@llnl.gov>
          sudo -u build gpg --recv-keys 7373B12CE03BEB4B # RuneScape Linux <noreply@jagex.com>

      - name: Run initial build
        run: |
          sudo -u build bash << EOF
          cd /home/build

          find source -name PKGBUILD -exec dirname {} \; | \
          aur build -s --noconfirm -a /dev/stdin
          EOF

      - name: Add additional dependencies
        run: |
          pacman -Sy

          i=0
          while true
          do
            i=$((i+1))
            echo "::notice ::Calculating missing dependencies (pass $i)..."
            packages=`find /home/build/source -name PKGBUILD -exec dirname {} \; | xargs basename -a | tr $'\n' '|'`
            ignore="libx264.so=164-64"
            missing=$(pacman -Dkkq 2>&1 | egrep $packages | egrep $ignore | cut -f2 -d"'")

            if [ -z "${missing}" ]
            then
              echo "::notice ::No missing packages found"
              break
            fi

            if [ $i -gt 5 ]
            then
              echo "::error ::Recursion limit exceeded for adding dependencies!"
              exit 1
            fi

            count=$(echo $missing | tr " " "\n" | wc -l)
            echo "::notice ::${count} missing packages found"

            for package in $missing
            do
              echo "::group::Building package \"$package\" from AUR"
              sudo -u build aur sync --noview --noconfirm $package
              echo "::endgroup::"
            done
          done

      - name: Clean up build environment
        run: |
          cp -rv /home/build/repo ./out

      - name: Import signing key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Sign repository
        run: |
          pushd out > /dev/null

          ln -sf ea-private.db.tar.xz.sig ea-private.db.sig
          ln -sf ea-private.files.tar.xz.sig ea-private.files.sig

          find . -name '*.zst' -exec repo-add --sign ea-private.db.tar.xz {} +

          rm *.old

          popd > /dev/null

      - name: Push to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'out'
